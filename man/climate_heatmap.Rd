% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heatmap.R
\name{climate_heatmap}
\alias{climate_heatmap}
\title{Create a climate heatmap.}
\usage{
climate_heatmap(data, metric, threshold = 90, binary = TRUE,
  ascending = TRUE, metricCol = metric, numBins = NULL, midpoint = NULL,
  range = NULL, colorScale = NULL)
}
\arguments{
\item{data}{The data. dataframe, data table, named matrix, etc.}

\item{metric}{character; The metric to display in the z axis. There should be
a corresponding column name.}

\item{threshold}{numeric; for binary color scales. Determines when
performance changes from acceptable to unacceptable.}

\item{binary}{logical; Should the data be represented by a binary color
scale?}

\item{ascending}{logical; Do increasing values in the metric indicate
increasingly acceptable performance?}

\item{metricCol}{character; the name of the column where the metric resides
in \code{data}. This defaults to \code{metric}.}

\item{numBins}{Only used if binary == FALSE. Provide a vector of length 2,
where the first number is the number of bins below the threshold
(inclusive), and the second number is the number of bins above the
treshold. Each number counts the midpoint as its own bin, so really you're
going to have one less bin than the sum of numbers you put here.}

\item{midpoint}{Only used if binary == FALSE. Sets the value where the color
scale diverges. If NULL, defaults to middle of metric range.}

\item{range}{Only used if binary == FALSE. A vector of length two that
defines the max and min value of the scale.}

\item{colorScale}{Provide a list representing a color scale. If binary ==
TRUE, this list should be of length 2. Otherwise, the list should be length
4, in the format c(lowest, midpoint, one-bin-above-midpoint, highest).}
}
\value{
A ggplot2 object representing the heatmap.
}
\description{
Creates a ggplot2 heatmap with temperature on the x axis, preciptation on the
y axis, and a given metric on the z axis.
}
\details{
In order for this function to work, you must have a column named "temp" and
another named "precip". Beyond that, you can have as many columns as you'd
like.

We expect the temp column to represent number of degrees celsius from the
baseline. The precip column should have decimal numbers that indicate the
percentage precipiation change from the baseline. For precip, "1" would
indicate no change in precipitation, while "0.7" would indicate a -30% change
and "1.2" a +20% change.

Because this is a ggplot2 object, you should be able to overwrite many of
settings defined here.
}
\examples{
df <- expand.grid(temp=0:8,precip=seq(0.7,1.3,by=0.1))
df$rel <- seq(40,100,length=63)
climate_heatmap(df,"rel",80)
climate_heatmap(df,"reliability", binary = FALSE, metricCol = "rel")

#don't use these colors in an actual plot
climate_heatmap(df,"rel", colorScale = c("green","orange"))

}
